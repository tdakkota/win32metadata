// Code generated by "stringer -type=TableType"; DO NOT EDIT.

package md

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Module-0]
	_ = x[TypeRef-1]
	_ = x[TypeDef-2]
	_ = x[Field-4]
	_ = x[MethodDef-6]
	_ = x[Param-8]
	_ = x[InterfaceImpl-9]
	_ = x[MemberRef-10]
	_ = x[Constant-11]
	_ = x[CustomAttribute-12]
	_ = x[FieldMarshal-13]
	_ = x[DeclSecurity-14]
	_ = x[ClassLayout-15]
	_ = x[FieldLayout-16]
	_ = x[StandAloneSig-17]
	_ = x[EventMap-18]
	_ = x[Event-20]
	_ = x[PropertyMap-21]
	_ = x[Property-23]
	_ = x[MethodSemantics-24]
	_ = x[MethodImpl-25]
	_ = x[ModuleRef-26]
	_ = x[TypeSpec-27]
	_ = x[ImplMap-28]
	_ = x[FieldRva-29]
	_ = x[Assembly-32]
	_ = x[AssemblyProcessor-33]
	_ = x[AssemblyOs-34]
	_ = x[AssemblyRef-35]
	_ = x[AssemblyRefProcessor-36]
	_ = x[AssemblyRefOs-37]
	_ = x[File-38]
	_ = x[ExportedType-39]
	_ = x[ManifestResource-40]
	_ = x[NestedClass-41]
	_ = x[GenericParam-42]
	_ = x[MethodSpec-43]
	_ = x[GenericParamConstraint-44]
}

const (
	_TableType_name_0 = "ModuleTypeRefTypeDef"
	_TableType_name_1 = "Field"
	_TableType_name_2 = "MethodDef"
	_TableType_name_3 = "ParamInterfaceImplMemberRefConstantCustomAttributeFieldMarshalDeclSecurityClassLayoutFieldLayoutStandAloneSigEventMap"
	_TableType_name_4 = "EventPropertyMap"
	_TableType_name_5 = "PropertyMethodSemanticsMethodImplModuleRefTypeSpecImplMapFieldRva"
	_TableType_name_6 = "AssemblyAssemblyProcessorAssemblyOsAssemblyRefAssemblyRefProcessorAssemblyRefOsFileExportedTypeManifestResourceNestedClassGenericParamMethodSpecGenericParamConstraint"
)

var (
	_TableType_index_0 = [...]uint8{0, 6, 13, 20}
	_TableType_index_3 = [...]uint8{0, 5, 18, 27, 35, 50, 62, 74, 85, 96, 109, 117}
	_TableType_index_4 = [...]uint8{0, 5, 16}
	_TableType_index_5 = [...]uint8{0, 8, 23, 33, 42, 50, 57, 65}
	_TableType_index_6 = [...]uint8{0, 8, 25, 35, 46, 66, 79, 83, 95, 111, 122, 134, 144, 166}
)

func (i TableType) String() string {
	switch {
	case 0 <= i && i <= 2:
		return _TableType_name_0[_TableType_index_0[i]:_TableType_index_0[i+1]]
	case i == 4:
		return _TableType_name_1
	case i == 6:
		return _TableType_name_2
	case 8 <= i && i <= 18:
		i -= 8
		return _TableType_name_3[_TableType_index_3[i]:_TableType_index_3[i+1]]
	case 20 <= i && i <= 21:
		i -= 20
		return _TableType_name_4[_TableType_index_4[i]:_TableType_index_4[i+1]]
	case 23 <= i && i <= 29:
		i -= 23
		return _TableType_name_5[_TableType_index_5[i]:_TableType_index_5[i+1]]
	case 32 <= i && i <= 44:
		i -= 32
		return _TableType_name_6[_TableType_index_6[i]:_TableType_index_6[i+1]]
	default:
		return "TableType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
